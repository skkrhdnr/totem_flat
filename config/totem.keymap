//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

//
//       ___________________________________
//      |  0  1  2  3  4  |   5  6  7  8  9 | 
//   ___| 10 11 12 13 14  |  15 16 17 18 19 |__
//  |  20 21 22 23 24 25  |  26 27 28 29 30 31 |
//  -------------------------------------------
//            | 32 33 34  |  35 36 37 |
//             -----------------------

#define BASE 0
#define NAV  1
#define NUM  2
#define SYM  3
#define FNC  4
#define INP  5
#define COMBO_MS 30

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <COMBO_MS>;
            key-positions = <33 12>;
            bindings = <&kp ESC>;
            layers = <0 5>;
        };

        combo_macro_arigatou {
            bindings = <&arigatou>;
            key-positions = <3 11 7>;
            timeout-ms = <COMBO_MS>;
            layers = <0>;
        };

        combo_macro_yoroshiku {
            bindings = <&yorosihku>;
            key-positions = <3 5 8>;
            timeout-ms = <COMBO_MS>;
            layers = <0>;
        };

        combo_tab_left {
            bindings = <&kp TAB>;
            key-positions = <13 33>;
            timeout-ms = <COMBO_MS>;
            layers = <0 5>;
        };

        combo_graphic_y {
            bindings = <&kp Y>;
            key-positions = <24 25>;
            timeout-ms = <COMBO_MS>;
        };

        combo_left_enter {
            bindings = <&kp ENTER>;
            key-positions = <33 13 12>;
            layers = <0 5>;
        };

        combo_ctrl_en {
            bindings = <&kp LC(SEMICOLON)>;
            key-positions = <16 18>;
            layers = <0 5>;
        };

        combo_bs {
            bindings = <&kp BACKSPACE>;
            key-positions = <16 36>;
            timeout-ms = <COMBO_MS>;
            layers = <0 5>;
        };

        combo_caps {
            bindings = <&caps_word>;
            key-positions = <13 16>;
            timeout-ms = <COMBO_MS>;
            layers = <0 5>;
        };

        combo_q {
            bindings = <&kp Q>;
            key-positions = <1 2>;
            timeout-ms = <COMBO_MS>;
            layers = <0 5>;
        };

        combo_f {
            bindings = <&kp F>;
            key-positions = <11 12>;
            timeout-ms = <COMBO_MS>;
            layers = <0 5>;
        };

        combo_v {
            bindings = <&kp V>;
            key-positions = <22 23>;
            timeout-ms = <COMBO_MS>;
            layers = <0 5>;
        };

        combo_p {
            bindings = <&kp P>;
            key-positions = <7 8>;
            layers = <0 5>;
            timeout-ms = <COMBO_MS>;
        };

        combo_- {
            bindings = <&kp MINUS>;
            key-positions = <17 18>;
            timeout-ms = <COMBO_MS>;
            layers = <0 5>;
        };

        combo_slash {
            bindings = <&kp SLASH>;
            key-positions = <28 29>;
            timeout-ms = <COMBO_MS>;
            layers = <0 5>;
        };

        combo_layer_inp {
            bindings = <&tog 5>;
            key-positions = <33 36>;
            layers = <0 5>;
        };

        combo_t {
            bindings = <&kp T>;
            key-positions = <2 3>;
            timeout-ms = <COMBO_MS>;
            layers = <0 5>;
        };

        combo_g {
            bindings = <&kp G>;
            key-positions = <12 13>;
            timeout-ms = <COMBO_MS>;
            layers = <0 5>;
        };

        combo_b {
            bindings = <&kp B>;
            key-positions = <23 24>;
            timeout-ms = <COMBO_MS>;
            layers = <0 5>;
        };

        combo_y {
            bindings = <&kp Y>;
            key-positions = <7 6>;
            timeout-ms = <COMBO_MS>;
            layers = <0 5>;
        };

        combo_h {
            bindings = <&kp H>;
            key-positions = <16 17>;
            timeout-ms = <COMBO_MS>;
            layers = <0 5>;
        };

        combo_n {
            bindings = <&kp N>;
            key-positions = <27 28>;
            timeout-ms = <COMBO_MS>;
            layers = <0 5>;
        };

        combo_en {
            bindings = <&kp LANGUAGE_2>;
            key-positions = <11 12 13>;
            timeout-ms = <COMBO_MS>;
            layers = <0 5>;
        };

        combo_jp {
            bindings = <&kp LANGUAGE_1>;
            key-positions = <16 17 18>;
            timeout-ms = <COMBO_MS>;
            layers = <0 5>;
        };
    };

    macros {
        bt_0: bt_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };
        bt_1: bt_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };
        bt_2: bt_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };
        arigatou: arigatou {
            compatible = "zmk,behavior-macro";
            label = "ARIGATOU";
            #binding-cells = <0>;
            bindings = <&kp LANG1 &kp A &kp R &kp I &kp G &kp A &kp T &kp O &kp U &kp G &kp O &kp Z &kp A &kp I &kp M &kp A &kp S &kp U>;
        };
        yorosihku: yorosihku {
            compatible = "zmk,behavior-macro";
            label = "YOROSIHKU";
            #binding-cells = <0>;
            bindings = <&kp LANG1 &kp Y &kp O &kp R &kp O &kp S &kp I &kp K &kp U &kp O &kp N &kp E &kp G &kp A &kp I &kp I &kp T &kp A &kp S &kp I &kp M &kp A &kp S &kp U>;
        };
        shita_line: shita_line {
            compatible = "zmk,behavior-macro";
            label = "SHITA_LINE";
            #binding-cells = <0>;
            bindings = <&kp RG(RIGHT) &kp ENTER>;
        };
        ue_line: ue_line {
            compatible = "zmk,behavior-macro";
            label = "UE_LINE";
            #binding-cells = <0>;
            bindings = <&kp RG(LEFT) &kp ENTER &kp UP>;
        };
    };

    lp: lp {
        compatible = "zmk,behavior-hold-tap";
        label = "LAYER|KP";
        flavor = "hold-preferred";
        tapping-term-ms = <250>;
        quick-tap-ms = <250>;
        bindings = <&mo>, <&kp>;

        #binding-cells = <2>;
    };
    lpy: lpy {
        compatible = "zmk,behavior-hold-tap";
        label = "yLAYER|KP";
        flavor = "hold-preferred";
        tapping-term-ms = <250>;
        bindings = <&mo>, <&kp>;

        #binding-cells = <2>;
    };
    cm_right: cm_right {
        compatible = "zmk,behavior-hold-tap";
        label = "CM_RIGHT";
        flavor = "tap-preferred";
        tapping-term-ms = <200>;
        quick-tap-ms = <200>;

        //global-quick-tap;

        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        hold-trigger-key-positions = <25 0 10 11 12 13 20 21 22 23 24 32 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 25 32 33 34>;
    };
    cm_left: cm_left {
        compatible = "zmk,behavior-hold-tap";
        label = "CM_LEFT";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick-tap-ms = <200>;
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 26 27 28 29 30 31 35 36 37>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            label = "BASE";
            bindings = <
       &kp Q            &kp W  &kp E             &kp R             &kp T                      &kp Y                &kp U              &kp I             &kp O    &kp P
       &cm_left LALT F  &kp A  &cm_left LGUI D   &cm_left LSHFT S  &cm_left LCTRL G           &cm_right RCTRL H    &cm_right RSHFT J  &cm_right RGUI K  &kp L    &cm_right RALT MINUS
&kp V  &kp V            &kp X  &kp C             &kp Z             &kp B                      &kp N                &kp M              &kp COMMA         &kp DOT  &kp SLASH             &kp SLASH
                               &lp 2 LANGUAGE_2  &lp SYM SPACE     &cm_left LGUI BACKSPACE    &cm_right RSHFT ESC  &lpy NAV ENTER     &lp 4 LANGUAGE_1
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        nav_layer {
            label = "NAV";
            bindings = <
           &none         &kp HOME        &kp UP_ARROW    &kp END          &kp LG(T)        &none      &none      &none     &none     &none
           &kp LA(LEFT)  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LA(RIGHT)    &none      &kp RSHFT  &kp RGUI  &kp RALT  &kp RCTRL
&kp LG(V)  &kp LG(V)     &kp LG(X)       &kp LG(C)       &kp LG(Z)        &none            &kp RG(N)  &none      &none     &none     &none      &none
                                         &none           &lp 2 SPACE      &kp BACKSPACE    &none      &none      &none
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        num_layer {
            label = "NUM";
            bindings = <
       &none  &kp F7  &kp F8  &kp F9  &kp F12    &none     &kp N7  &kp N8  &kp N9  &none
       &none  &kp F4  &kp F5  &kp F6  &kp F11    &kp PLUS  &kp N4  &kp N5  &kp N6  &kp MINUS
&none  &none  &kp F1  &kp F2  &kp F3  &kp F10    &kp STAR  &kp N1  &kp N2  &kp N3  &kp FSLH   &kp FSLH
                      &none   &none   &none      &none     &kp N0  &kp N0
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        sym_layer {
            label = "SYM";
            bindings = <
           &kp EXCL      &kp AT    &kp HASH  &kp DLLR   &kp PRCNT    &kp CARET     &kp AMPS   &kp STAR  &kp LBRC   &kp RBRC
           &kp EQUAL     &kp BSLH  &kp PIPE  &kp PLUS   &kp EXCL     &kp QUESTION  &kp SQT    &kp DQT   &kp COLON  &kp SEMI
&kp GRAVE  &kp UP_ARROW  &kp DOWN  &kp LEFT  &kp RIGHT  &none        &none         &kp LPAR   &kp RPAR  &kp LBKT   &kp RBKT  &kp TILDE
                                   &none     &none      &none        &none         &kp RSHFT  &none
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        fnc_layer {
            label = "FNC";
            bindings = <
       &none        &kp RC(RS(TAB))   &kp RG(RA(UP))    &kp RC(TAB)        &none          &bt BT_CLR  &bt_0          &bt_1          &bt_2  &none
       &kp RA(TAB)  &kp RG(RA(LEFT))  &kp RG(RA(DOWN))  &kp RG(RA(RIGHT))  &kp RG(TAB)    &kp K_MUTE  &kp C_VOL_DN   &kp C_VOL_UP   &none  &none
&none  &none        &kp RA(UP)        &kp RG(RA(N))     &kp RA(DOWN)       &none          &none       &kp C_BRI_DEC  &kp C_BRI_INC  &none  &none  &kp C_POWER
                                      &none             &none              &none          &none       &none          &none
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        inp_layer {
            label = "INP";
            bindings = <
       &none      &kp W  &kp E  &kp R          &none    &none  &kp U           &kp I      &kp O    &none
       &kp RSHFT  &kp A  &kp D  &kp S          &none    &none  &kp J           &kp K      &kp L    &kp LSHFT
&none  &none      &kp X  &kp C  &kp Z          &none    &none  &kp M           &kp COMMA  &kp DOT  &none      &none
                         &none  &lp SYM SPACE  &none    &none  &lpy NAV ENTER  &none
            >;
        };

        //nav_layer { label = "template"; bindings = <
        //          &none          &none          &none          &none          &none          &none          &none          &none          &none          &none
        //          &none          &none          &none          &none          &none          &none          &none          &none          &none          &none          
        //&none          &none          &none          &none          &none          &none          &none          &none          &none          &none          &none          &none          
        //                                      &none          &none          &none          &none          &none          &none
        //>;};
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
    };
};
