//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

//
//       ___________________________________
//      |  0  1  2  3  4  |   5  6  7  8  9 | 
//   ___| 10 11 12 13 14  |  15 16 17 18 19 |__
//  |  20 21 22 23 24 25  |  26 27 28 29 30 31 |
//  -------------------------------------------
//            | 32 33 34  |  35 36 37 |
//             -----------------------

#define BASE 0
#define NAV  1
#define NUM  2
#define SYM  3
#define FNC  4

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <6 7>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_num_f10 {
            bindings = <&kp F10>;
            key-positions = <29 28>;
            timeout-ms = <50>;
            layers = <2>;
        };

        combo_num_f11 {
            bindings = <&kp F11>;
            key-positions = <17 18>;
            timeout-ms = <50>;
            layers = <2>;
        };

        combo_num_f12 {
            bindings = <&kp F12>;
            key-positions = <7 8>;
            layers = <2>;
            timeout-ms = <50>;
        };

        combo_shft-tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <5 6>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_home {
            bindings = <&kp LG(LEFT)>;
            key-positions = <6 16>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_end {
            bindings = <&kp LG(RIGHT)>;
            key-positions = <8 18>;
            layers = <0>;
            timeout-ms = <50>;
        };

        combo_pageup {
            bindings = <&kp PAGE_UP>;
            key-positions = <22 23>;
            layers = <0>;
            timeout-ms = <50>;
        };

        combo_pagedown {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <23 24>;
            layers = <0>;
            timeout-ms = <50>;
        };

        combo_macro_arigatou {
            bindings = <&arigatou>;
            key-positions = <3 11 7>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_macro_yoroshiku {
            bindings = <&yorosihku>;
            key-positions = <3 5 8>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_excl {
            bindings = <&kp EXCL>;
            key-positions = <27 28>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_question {
            bindings = <&kp QUESTION>;
            key-positions = <28 29>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_opt-left {
            bindings = <&kp LA(LEFT)>;
            key-positions = <16 27>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_opt_right {
            bindings = <&kp LA(RIGHT)>;
            key-positions = <18 29>;
            timeout-ms = <50>;
            layers = <0>;
        };
    };

    macros {
        bt_0: bt_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };
        bt_1: bt_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };
        bt_2: bt_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };
        arigatou: arigatou {
            compatible = "zmk,behavior-macro";
            label = "ARIGATOU";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_2 &kp A &kp R &kp I &kp G &kp A &kp T &kp O &kp U &kp G &kp O &kp Z &kp A &kp I &kp M &kp A &kp S &kp U>;
        };
        yorosihku: yorosihku {
            compatible = "zmk,behavior-macro";
            label = "YOROSIHKU";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_2 &kp Y &kp O &kp R &kp O &kp S &kp H &kp I &kp K &kp U &kp O &kp N &kp E &kp G &kp A &kp I &kp I &kp T &kp A &kp S &kp I &kp M &kp A &kp S &kp U>;
        };
    };

    lp: lp {
        compatible = "zmk,behavior-hold-tap";
        label = "LAYER|KP";
        flavor = "hold-preferred";
        tapping-term-ms = <250>;
        quick-tap-ms = <250>;
        bindings =
            <&mo>,
            <&kp>;

        #binding-cells = <2>;
    };
    lpy: lpy {
        compatible = "zmk,behavior-hold-tap";
        label = "yLAYER|KP";
        flavor = "hold-preferred";
        tapping-term-ms = <250>;
        bindings =
            <&mo>,
            <&kp>;

        #binding-cells = <2>;
    };
    cm: cm {
        compatible = "zmk,behavior-hold-tap";
        label = "CUSTOM_MT";
        flavor = "tap-preferred";
        tapping-term-ms = <250>;
        quick-tap-ms = <250>;

        //global-quick-tap;

        bindings =
            <&kp>,
            <&kp>;

        #binding-cells = <2>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            label = "BASE";
            bindings = <
                   &kp Q       &kp W             &kp E          &kp R               &kp T          &kp Y           &kp U            &kp I       &kp O            &kp P
             &cm LCTRL F  &cm LALT A        &cm LGUI D    &cm LSHFT S               &kp G          &kp H     &cm RSHFT J       &cm RGUI K  &cm RALT L  &cm RCTRL MINUS
&lp NUM ESC        &kp Z       &kp X             &kp C          &kp V               &kp B          &kp N           &kp M        &kp COMMA     &kp DOT         &kp FSLH  &lp FNC TAB
                                      &lp 2 LANGUAGE_2  &lp SYM SPACE  &cm RGUI BACKSPACE    &lp SYM TAB  &lpy NAV ENTER  &cm RSHFT LANG1
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        nav_layer {
            label = "NAV";
            bindings = <
           &none        &kp HOME    &kp UP_ARROW          &kp END  &kp LG(T)        &none         &none         &none         &none         &none
       &kp LG(A)  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW      &none        &none     &kp RSHFT      &kp RGUI      &kp RALT     &kp RCTRL
&none  &kp LG(Z)       &kp LG(X)       &kp LG(C)        &kp LG(V)      &none    &kp RG(N)  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_DN  &kp C_BRI_UP  &none
                                         &kp TAB          &kp ESC      &none        &none         &none         &none
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        num_layer {
            label = "NUM";
            bindings = <
       &none     &none    &kp UP      &none  &none        &none  &kp N7  &kp N8  &kp N9     &none
       &none  &kp LEFT  &kp DOWN  &kp RIGHT  &none     &kp PLUS  &kp N4  &kp N5  &kp N6  &kp STAR
&none  &none     &none     &none      &none  &none    &kp MINUS  &kp N1  &kp N2  &kp N3  &kp FSLH  &none
                           &none      &none  &none        &none  &kp N0   &none
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        sym_layer {
            label = "SYM";
            bindings = <
               &kp EXCL    &kp AT  &kp HASH   &kp DLLR  &kp PRCNT       &kp CARET   &kp AMPS  &kp STAR   &kp LBRC  &kp RBRC
              &kp EQUAL  &kp BSLH  &kp PIPE   &kp PLUS   &kp EXCL    &kp QUESTION    &kp SQT   &kp DQT  &kp COLON  &kp SEMI
&kp GRAVE  &kp UP_ARROW  &kp DOWN  &kp LEFT  &kp RIGHT      &none           &none   &kp LPAR  &kp RPAR   &kp LBKT  &kp RBKT  &kp TILDE
                                      &none  &kp LSHFT      &none           &none  &kp RSHFT     &none
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        fnc_layer {
            label = "FNC";
            bindings = <
             &none   &kp RC(RS(TAB))    &kp RG(RA(UP))        &kp RC(TAB)        &none    &none  &kp F7      &kp F8  &kp F9  &kp F12
       &kp RA(TAB)  &kp RG(RA(LEFT))  &kp RG(RA(DOWN))  &kp RG(RA(RIGHT))  &kp RG(TAB)    &none  &kp F4      &kp F5  &kp F6  &kp F11
&none        &none        &kp RA(UP)     &kp RG(RA(N))       &kp RA(DOWN)        &none    &none  &kp F1      &kp F2  &kp F3  &kp F10  &none
                                                 &bt_0              &bt_1        &bt_2    &none   &none  &bt BT_CLR
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        //nav_layer { label = "template"; bindings = <
        //          &none          &none          &none          &none          &none          &none          &none          &none          &none          &none
        //          &none          &none          &none          &none          &none          &none          &none          &none          &none          &none          
        //&none          &none          &none          &none          &none          &none          &none          &none          &none          &none          &none          &none          
        //                                      &none          &none          &none          &none          &none          &none
        //>;};
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
    };
};
